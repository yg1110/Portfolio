{"version":3,"sources":["assets/images/Ssafy-Shopper.png","assets/images/Newspace.png","assets/images/냉장고를부탁해.png","assets/images/ItForYou.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","SsafyShopper","Newspace","냉장고를부탁해","ItForYou","className","href","title","src","width","height","alt","defaultProps","require","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wE,gBCA3CD,EAAOC,QAAU,IAA0B,sC,kFCG3C,SAASC,EAAT,GAA6D,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,2CAASC,EAAY,EAAZA,SAC9C,OACE,yBAAKC,UAAU,WACb,4BAAQA,UAAU,OAChB,4BACE,uBAAGC,KAAK,IAAIC,MAAM,YAAlB,QAMJ,yBAAKF,UAAU,YACb,uBAAGC,KAAK,IAAID,UAAU,aACpB,uBAAGA,UAAU,eADf,SAGA,4BACE,4BACE,uBAAGC,KAAK,IAAIC,MAAM,QAAlB,SAIF,4BACE,uBAAGD,KAAK,IAAIC,MAAM,SAAlB,UAIF,4BACE,uBAAGD,KAAK,IAAIC,MAAM,QAAlB,YAIF,wBAAIF,UAAU,UACZ,uBAAGC,KAAK,4BAA4BC,MAAM,UACxC,uBAAGF,UAAU,mBAGjB,wBAAIA,UAAU,UACZ,uBAAGC,KAAK,8BAA8BC,MAAM,WAC1C,uBAAGF,UAAU,qBAMrB,6BAASA,UAAU,WACjB,4BACE,wBAAIA,UAAU,iBACZ,yBACEG,IAAKP,EACLQ,MAAM,QACNC,OAAO,QACPC,IAAI,mBAGR,wBAAIN,UAAU,iBACZ,yBAAKG,IAAKN,EAAUO,MAAM,QAAQC,OAAO,QAAQC,IAAI,cAEvD,wBAAIN,UAAU,iBACZ,yBACEG,IAAKL,EACLM,MAAM,QACNC,OAAO,QACPC,IAAI,gDAGR,wBAAIN,UAAU,iBACZ,yBAAKG,IAAKJ,EAAUK,MAAM,QAAQC,OAAO,QAAQC,IAAI,gBAK3D,6BAASN,UAAU,WACjB,qCAGF,gCACE,4CAMRL,EAAIY,aAAe,CACjBX,aAAcY,EAAQ,IACtBX,SAAUW,EAAQ,IAClBV,6CAASU,EAAQ,IACjBT,SAAUS,EAAQ,KAGLb,QChFKc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.87692c57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ssafy-Shopper.1ca24e50.png\";","module.exports = __webpack_public_path__ + \"static/media/Newspace.a131724d.png\";","module.exports = __webpack_public_path__ + \"static/media/냉장고를부탁해.346cfaec.png\";","module.exports = __webpack_public_path__ + \"static/media/ItForYou.c2e8917e.png\";","import React from \"react\";\nimport \"./App.css\";\n\nfunction App({ SsafyShopper, Newspace, 냉장고를부탁해, ItForYou }) {\n  return (\n    <div className=\"wrapper\">\n      <header className=\"top\">\n        <h1>\n          <a href=\"#\" title=\"Katosnap\">\n            YG\n          </a>\n        </h1>\n      </header>\n\n      <nav className=\"flex-nav\">\n        <a href=\"#\" className=\"toggleNav\">\n          <i className=\"fa fa-bars\"></i> Menu\n        </a>\n        <ul>\n          <li>\n            <a href=\"#\" title=\"Home\">\n              Home\n            </a>\n          </li>\n          <li>\n            <a href=\"#\" title=\"About\">\n              About\n            </a>\n          </li>\n          <li>\n            <a href=\"#\" title=\"Work\">\n              Project\n            </a>\n          </li>\n          <li className=\"social\">\n            <a href=\"https://github.com/yg1110\" title=\"GitHub\">\n              <i className=\"fa fa-github\"></i>\n            </a>\n          </li>\n          <li className=\"social\">\n            <a href=\"https://yg1110.tistory.com/\" title=\"tistory\">\n              <i className=\"fa fa-tumblr\"></i>\n            </a>\n          </li>\n        </ul>\n      </nav>\n\n      <section className=\"gallery\">\n        <ul>\n          <li className=\"gallery-image\">\n            <img\n              src={SsafyShopper}\n              width=\"720px\"\n              height=\"480px\"\n              alt=\"Ssafy-Shopper\"\n            />\n          </li>\n          <li className=\"gallery-image\">\n            <img src={Newspace} width=\"720px\" height=\"480px\" alt=\"Newspace\" />\n          </li>\n          <li className=\"gallery-image\">\n            <img\n              src={냉장고를부탁해}\n              width=\"720px\"\n              height=\"480px\"\n              alt=\"냉장고를부탁해\"\n            />\n          </li>\n          <li className=\"gallery-image\">\n            <img src={ItForYou} width=\"720px\" height=\"480px\" alt=\"ItForYou\" />\n          </li>\n        </ul>\n      </section>\n\n      <section className=\"details\">\n        <h2>test</h2>\n      </section>\n\n      <footer>\n        <p>&copy; yg1110</p>\n      </footer>\n    </div>\n  );\n}\n\nApp.defaultProps = {\n  SsafyShopper: require(\"./assets/images/Ssafy-Shopper.png\"),\n  Newspace: require(\"./assets/images/Newspace.png\"),\n  냉장고를부탁해: require(\"./assets/images/냉장고를부탁해.png\"),\n  ItForYou: require(\"./assets/images/ItForYou.png\")\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}